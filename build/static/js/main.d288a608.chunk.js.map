{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Section/Section.js","components/Filter/Filter.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","preventDefault","className","s","form","label","input","type","onChange","pattern","title","required","btn","ContactsList","contacts","onDeleteContact","map","id","item","onClick","Section","children","section","Filter","placeholder","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","contact","shortid","generate","find","toast","warn","prevContacts","length","normalizeFilter","toLowerCase","includes","getFilteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d288a608.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__2fd4Y\",\"btn\":\"ContactsList_btn__HZLjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Qv5I\",\"title\":\"Section_title__2-e9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__18hE-\",\"input\":\"Filter_input__1Wdrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__-UGKg\",\"label\":\"ContactForm_label__O0qw_\",\"input\":\"ContactForm_input__3IV9t\",\"btn\":\"ContactForm_btn__1jFmb\"};","import React, { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n \r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit({name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n \r\n    return (\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Phone\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    )\r\n\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport s from './ContactsList.module.css';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} className={s.item}>\r\n          {name}: {number}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n            className={s.btn}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  )\r\n}\r\n\r\nexport default ContactsList;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name:\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={s.input}\r\n        placeholder=\"Fiona Holmse\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n}\r\nexport default Filter;\r\n","import  { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactsList from './components/ContactsList';\r\nimport Section from './components/Section';\r\nimport Filter from './components/Filter';\r\nimport useLocalStorage from 'hooks/useLocalStorage';\r\n\r\nfunction App() {\r\n  // state = {\r\n  //   contacts: [\r\n  //      { \"id\": \"id-1\", \"name\": \"Rosie Simpson\", \"number\": \"459-12-56\" },\r\n  //   { \"id\": \"id-2\", \"name\": \"Hermione Kline\", \"number\": \"443-89-12\" },\r\n  //   { \"id\": \"id-3\", \"name\": \"Eden Clements\", \"number\": \"645-17-79\" },\r\n  //   { \"id\": \"id-4\", \"name\": \"Annie Copeland\", \"number\": \"227-91-26\" }\r\n  //   ],\r\n  //   filter: '',\r\n  // };\r\nconst [contacts, setContacts] = useLocalStorage('contacts', [])\r\n//   const [contacts, setContacts] = useState(() => {\r\n//    return JSON.parse(window.localStorage.getItem('contacts')) ?? []\r\n// });\r\n  const [filter, setFilter] = useState('');\r\n\r\n  // componentDidMount() {\r\n\r\n  //   const localContacts = localStorage.getItem('contacts');\r\n  //   const parsedContacts = JSON.parse(localContacts);\r\n\r\n  //   if (parsedContacts) {\r\n  //     this.setState({ contacts: parsedContacts });\r\n  //   }\r\n\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem('contacts', JSON.stringify(contacts))\r\n  // }, [contacts])\r\n\r\n  // componentDidUpdate(prevState) {\r\n\r\n  //   const nextContacts = this.state.contacts;\r\n  //   const prevContacts = prevState.contacts;\r\n\r\n  //   if (nextContacts !== prevContacts) {\r\n  //     localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n  const addContact = ({ name, number}) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    if (contacts.find(item => item.name === contact.name)) {\r\n\r\n      return toast.warn(`${contact.name} is already in contacts`);\r\n      //alert(`${contact.name} is already in contacts`);\r\n   };\r\n   \r\n    setContacts(prevContacts => [...prevContacts, contact]); \r\n  }\r\n\r\n  const onDeleteContact = id => {\r\n    setContacts( contacts.filter(contact => contact.id !== id));\r\n  };\r\n\r\n  const onFilterChange = e => {\r\n setFilter(e.currentTarget.value)\r\n  };\r\n\r\n  const getFilteredContacts = () => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter),\r\n    );\r\n  };\r\n\r\n\r\n    return (\r\n      <>\r\n        <Section>\r\n          <h1 className=\"title\">Phonebook</h1>\r\n          <ContactForm onSubmit={addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <Filter value={filter} onChange={onFilterChange} />\r\n          {contacts.length ? (\r\n            <ContactsList\r\n              contacts={ getFilteredContacts()}\r\n              onDeleteContact={onDeleteContact}\r\n            />\r\n          ) : null}\r\n        </Section>\r\n         <ToastContainer />\r\n      </>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}